[["0",{"pageContent":"/*\r\n * This program shows some arithmetic operations. It also shows explicit and implicit casting from one data type to another. And, the sqrt\r\n * of  negative number is not a number (i.e. compiles ok but produces wrong result).\r\n */\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tint a = 2, b = 3, c = 4;\r\n\tint result = a + b*c; //multiplication will be performed first\r\n\tcout << \"Result: \" << result << endl;\r\n\r\n\tint result2 = (2 + 3) * 4; // the expression between brackets will be evaluated first\r\n\tcout << \"Result: \" << result2 << endl;\r\n\r\n\r\n\tint sum = 55, count = 10;\r\n\tcout << \"Output: \" << sum / count << endl; // expected output: 5\r\n\tcout << \"Output: \" << (double) sum / count << endl; // expected output: 5.5 (because we casted the output to double).\r\n\r\n\tdouble d1 = sum / count;\r\n\tcout << \"Output: \" << d1 << endl; // expected output is 5\r\n\r\n\tdouble v = 55;","metadata":{"loc":{"lines":{"from":1,"to":25}}}}],["1",{"pageContent":"double d1 = sum / count;\r\n\tcout << \"Output: \" << d1 << endl; // expected output is 5\r\n\r\n\tdouble v = 55;\r\n\tdouble d2 = v / count; // one of the operands is a double and hence the result will be implicitly casted to double\r\n\tcout << \"Output: \" << d2 << endl; // expected output is 5.5\r\n\r\n\tdouble num = 9;\r\n\tcout << sqrt(-num) << endl; // No sqrt of a negative number.\r\n\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":25,"to":37}}}}],["2",{"pageContent":"/*\r\n * This program prompt the user for a dollar value (e.g. $27.67) and prints the number of loonies, quarters, \r\n * dimes, nickels, and pennies. Note: it doesn't print the correct result. Hint: think about the data type for 'amount'.\r\n */\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tint amount(0);\r\n\r\n\tcout << \"Enter the amount you want to convert: $\";\r\n\tcin >> amount;\r\n\r\n\tint remaining = amount * 100;\r\n\r\n\t// Loonies\r\n\tint dollars = remaining / 100;\r\n\tremaining = remaining % 100;\r\n\r\n\t// Quarters\r\n\tint quarters = remaining / 25;\r\n\tremaining = remaining % 25;\r\n\t\r\n\t// Dimes\r\n\tint dimes = remaining / 10;\r\n\tremaining = remaining % 10;\r\n\r\n\t// Nickels\r\n\tint nickels = remaining / 5;\r\n\tremaining = remaining % 5;\r\n\r\n\t// Pennies\r\n\tint pennies = remaining;\r\n\r\n\tcout << \"The amount: $\" << amount << \" consists of: \" << endl;\r\n\tcout << dollars << \" Loonies\" << endl;\r\n\tcout << quarters << \" Quarters\" << endl;\r\n\tcout << dimes << \" Dimes\" << endl;","metadata":{"loc":{"lines":{"from":1,"to":39}}}}],["3",{"pageContent":"cout << \"The amount: $\" << amount << \" consists of: \" << endl;\r\n\tcout << dollars << \" Loonies\" << endl;\r\n\tcout << quarters << \" Quarters\" << endl;\r\n\tcout << dimes << \" Dimes\" << endl;\r\n\tcout << nickels << \" Nickels\" << endl;\r\n\tcout << pennies << \" Pennies\" << endl;\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":39,"to":47}}}}],["4",{"pageContent":"Ontario Tech University\nFaculty of Engineering and Applied Science\nDean's Office\nCourse Outline\nENGR 1200U\nIntroduction to Programming for Engineers\nWinter 2020\nOffering Approval: \nApproved\nCourse Description: \nIntroduction \nto \nthe \nanatomy \nof \na  computer: \nCPU, \nmemory, \nmachine \ncycle, \ninput \nand \noutput \ndevices, \ndata \nrepresentation;\nfundamental \nprogram\nming \nconcepts: \nflowcharting, \nalgorithm \ndesign, \nuse \nof \nprocedures, \nprogram \ncontrol \nflow, \narrays \nand\nvectors, arithmetic and logic operations, input and output, data declaration; programming in C++.\nMajor Topics: \nIntroduction to Computers & Data Representation\nIntroduction to C++ Programming\nControl Structures\nWorking with Data Files\nModular Programming with Functions\nArrays & Vectors\nPointers\nGraduate Attributes: \nThe \ngraduate \nattributes \ndeveloped \nand \nrequired \nby \nthe \nCanadian \nEngineering \nAccreditation \nBoard’s \nAccreditation \nCriteria \nand\nProcedures \nare \nlisted \nbelow, \nwith \nthose \ncovered \nin the","metadata":{"loc":{"lines":{"from":1,"to":74}}}}],["5",{"pageContent":"graduate \nattributes \ndeveloped \nand \nrequired \nby \nthe \nCanadian \nEngineering \nAccreditation \nBoard’s \nAccreditation \nCriteria \nand\nProcedures \nare \nlisted \nbelow, \nwith \nthose \ncovered \nin the \ncourse \nto some \ndegree \n(introduced, \ndeveloped, \napplied). \nMore \ndetails","metadata":{"loc":{"lines":{"from":74,"to":103}}}}],["6",{"pageContent":"Instructor: \nDr. Anwar Abdalbari\nEmail: \nanwar.abdalbari@uoit.ca\nOffice: \nSIRC3386\nPhone: \n9057218686 Ext. 7377\nOffice Hours: \nFridays 4:00 pm to 5:00 pm\nInstructor: \nDr. Khalid \nElgazzar\nEmail: \nKhalid.Elgazzar@uoit.ca\nOffice: \nSIRC 3384\nPhone: \n9057218686 Ext. 7365\nOffice Hours: \nTuesdays 12:30 pm - 01:30 pm\nabout \nthe \naccreditation \nof \neng\nineering \nprograms \nand \ngraduate \nattributes \ncan \nbe \nfound\nhere: \nhttp://www.engineering.uoit.ca/undergraduate/ceab-accredited-programs-and-admissions\nAttributes\nCovered in this Course\nKnowledge base\n✔\nProblem analysis\n✔\nInvestigation\n✔\nDesign\n✔\nUse of engineering tools\n✔\nIndividual and team work\n✔\nCommunication skills\n✖\nProfessionalism\n✖\nImpact of engineering on society and the environment\n✖\nEthics and equity\n✖\nEconomics and project management\n✖\nLife-long learning\n✔\nCourse Content Breakdown\nMath\nBasic Science\nComplementary Studies\nEngineering Science\nEngineering Design\n0%\n0%\n0%\n100%\n0%\nCourse Outcomes:","metadata":{"loc":{"lines":{"from":1,"to":74}}}}],["7",{"pageContent":"✖\nEconomics and project management\n✖\nLife-long learning\n✔\nCourse Content Breakdown\nMath\nBasic Science\nComplementary Studies\nEngineering Science\nEngineering Design\n0%\n0%\n0%\n100%\n0%\nCourse Outcomes: \nStudents who successfully complete this course will have reliably demonstrated an understanding of the following areas:\n-    Describe how the various hardware devices and software programs interact to perform the basic functions of a PC\n-    Explain how application programs manipulate data to produce the desired results\n-    Formulate problems for solution by a computer, such as flowcharts, and selection of application programs\n-    Describe the main characteristics and benefits of structured programming\n-    Write, debug and test programs in C++ to achieve specified outcomes\nInstructors\nTeaching Assistants","metadata":{"loc":{"lines":{"from":74,"to":98}}}}],["8",{"pageContent":"TA Name: \nCheck Blackboard for the list of TAs and their contact information.\nRequired Course Text and Other Materials: \nEngineering Problem Solving with C++, 4th Edition by Delores M. Etter, Jeanine A. Ingber. Pearson, 2017.\nReference Books and Information Sources: \nLecture slides and additional material will be posted on Blackboard.\nCourse Organization and Delivery Mode:","metadata":{"loc":{"lines":{"from":1,"to":7}}}}],["9",{"pageContent":"Week\nTopic\nW1: Jan 6\nIntroduction to Computing and Programming\nW2: Jan 13\nSimple C++ Programs\nW3: Jan 20\nSimple C++ Programs (continued)\nW4: Jan 27\nControl Structures: Selection\nW5: Feb 3\nControl Structures: Repetition\nW6: Feb 10\nWorking with Data Files\nFeb 15\n Working with Data Files (continued)\nW7: Feb 17\nMidterm Break\nW8: Feb 24\nMidterm Test (Time TBA)\n W9: Mar 2\nModular Programming with Functions\nW10: Mar 9\nFunctions (continued)\nW11: Mar 16\nOne-Dimensional Arrays\nW12: Mar 23\nTwo-Dimensional Arrays and Pointers\nW13: Mar 30\nPointers & Review","metadata":{"loc":{"lines":{"from":1,"to":30}}}}],["10",{"pageContent":"Midterm Date: \nSaturday, February 29, 2020 - \n03:30\n to \n06:30\nMidterm Location: \nTBA\nScheduled Regular Class Meeting Times: \nSection \n70607 \n(Dr. Anwar Abdalbari)\n:\nWednesday and Friday,  5:10 pm - 6:30 pm (SIRC2060) \nSection  \n70041 \n(Dr. Khalid Elgazzar)\n:\nTuesday and Thursday,  11:10 am - 12:30 pm (SIRC2060)\nSection \n71610 \n(Dr.\nKhalid Elgazzar\n)\n:\n Tuesday and Friday, 12:40 pm - 2:00 pm (\nUA1350\n)\n \nFinal Grade Breakdown: \nIn-Class Quizzes\n: 15% (best 9 quizzes will be counted, equal weighting)\nMidterm Test\n: \n30%\n (Sat., Feb. 15)\nIn-Tutorial exercises: 10%\nFinal Exam\n: 45% (to be scheduled by the university during the final exam period)\nNote (1): No makeup quizzes or tests will be offered no matter what is the reason. \nNote (2): You must pass the final exam to pass the course.\nNote (3):  The instructors \nreserve \nthe right to use electronic \nmeans \nto detect \nand help prevent \nplagiarism. \nStudents \nagree \nthat\nby taking this course \nthat all assessment \nitems \nare subject","metadata":{"loc":{"lines":{"from":1,"to":54}}}}],["11",{"pageContent":"reserve \nthe right to use electronic \nmeans \nto detect \nand help prevent \nplagiarism. \nStudents \nagree \nthat\nby taking this course \nthat all assessment \nitems \nare subject \nto submission \nfor textual \nsimilarity \nreview \nto online \n(or manual)\nservices for detecting any form of plagiarism.\nNote (4): Quizzes \nmust be done in class using the lockdown \nbrowser. \nStudents \nshould \ncheck \nthe IT department \nfor the correct\nversion of the lockdown browser and a network patch cable.\nMidterms\nTutorials: \nPlease \ncheck mycamp\nus for your tutorial \nsection \ntiming. \nThe tutorials \nwill be facilitated\n by Teaching \nAssistants \n(TAs) and will\ninclude \nimportant \nhands-on \ntraining. \nThere \nare 10 marks \nassigned \nfor Tutorial \nactivities, \nstudents \nare highly \nencouraged \nto","metadata":{"loc":{"lines":{"from":54,"to":107}}}}],["12",{"pageContent":"attend \nthe \ntutorial \nsec\ntion \nthey \nare \nofficiall\ny registered \nin and \ncomplete \nthe \nassigned \nactivities \nand \npractice \nprogramming \n--\nbecause learning to program is a lot like learning how to swim, which cannot be learned simply by reading.\nOther Course Information: \nProblem Sets\n: This couse \nhas \nno \ntak\ne-home \nassignments \nthat \nwill \nneed \nto be \nsubmitted \nor graded, \nhowever, \nproblem \nsets \nand\nprogramming \nfor \npractice \nwill \nbe \nposted \non  Blackboard. \nStudents \nshould \nattempt \nall  of \nthem \nbut \ndo \nnot \nneed \nto \nsubmit\nsolutions for grading. Sample solutions will be posted on Blackboard the week after the practice assignments are released.\nMedical Certificates and Deferred Exams: \nMedical statements and academic consideration forms for any missed student work worth 25% or less (not including midterms\nor tests) will be submitted directly to the course instructor. This includes missed quizzes, assignments and labs.","metadata":{"loc":{"lines":{"from":1,"to":59}}}}],["13",{"pageContent":"or tests) will be submitted directly to the course instructor. This includes missed quizzes, assignments and labs.\nMissed Midterms or Coursework Worth More than 25%\nFor \nany mis\nsed \nmidter\nms \nor tests, \nregardles\ns of weight, \nor coursework \nworth \nmore \nthan\n 25%, \nstudents \nwill \nneed \nto submit \nthe\nUOIT Medical statement or academic consideration form to the FEAS Advising Office following the form guidelines.\nGuidelines for Medical Statements\nMedical statements cover any missed work due to a medical reasons. The student must:\n- See a medical doctor within 24 hours of the missed work\n- Submit the form to the correct individual within 3 working days\nGuidelines for Academic Consideration Forms\nAcademic \nconsideration \nforms \ncover \nany \nmissed \nwork \nfor \nnon-academic \ngrounds, \nfor \nexample, \nreligious \nobservations, \ncourt\nappearance, \npersonal\n/family \nemergency, \nvarsity \nevents. \nThe \nstudent \nmust \nprovide \nsupporting \ndocumentation \nif  deemed\nnecessary.\nShould \nthe","metadata":{"loc":{"lines":{"from":59,"to":115}}}}],["14",{"pageContent":"for \nexample, \nreligious \nobservations, \ncourt\nappearance, \npersonal\n/family \nemergency, \nvarsity \nevents. \nThe \nstudent \nmust \nprovide \nsupporting \ndocumentation \nif  deemed\nnecessary.\nShould \nthe \nmedical \ncertificate \nproven \nto be invalid \ndue \nto any \nkind \nof action \nby \nthe \nstudent, \nsuch \nstudent's \nbehaviour \nwill \nbe\nconsidered as a major misconduct and respective disciplinary actions will be commenced.\nFailure to comply with the above will result in an mark of 0 for the exam.\nAccessibility: \nStudents \nwith \ndisabilities \nmay \nrequest \nto be \nconsidered \nfor \nformal \nacademic \naccommodation \nin accordance \nwith \nthe \nOntario\nHuman \nRig\nhts \nCode. \nStudents \nseeking \nacc\nommodation \nmust \nmake \ntheir \nrequests \nthrough \nthe \nCentre \nfor \nStudents \nwith\nDisabilities \nin  a  timely\n  manner, \nand \nprovide \nrelevant \nand \nrecent \ndocumentation \nto \nver\nify \nthe \neffect \nof  their \ndisability \nand \nto\nallow the University to determine appropriate accommodations.\nAccommodation","metadata":{"loc":{"lines":{"from":115,"to":207}}}}],["15",{"pageContent":"manner, \nand \nprovide \nrelevant \nand \nrecent \ndocumentation \nto \nver\nify \nthe \neffect \nof  their \ndisability \nand \nto\nallow the University to determine appropriate accommodations.\nAccommodation \ndeci\nsions \nwill \nbe \nmade \nin \naccordance \nwith \nthe \nOntario \nHuman \nRights \nCode. \nAccommodations \nwill \nbe\nconsistent \nwith \nand \nsupportive \nof the \nessent\nial \nrequirements \nof courses \nand \nprograms, \nand \nprovided \nin a way \nthat \nrespects \nthe\ndignity \nof \nstudents \nwith \ndisabilities \nand \nencourages \nintegration \nand \nequality \nof \nopportunity. \nReasonable \nacademic\naccommodation \nmay \nrequire \ninstructors \nto \nexercise \ncreativity \nand \nflexibility \nin \nresponding \nto \nthe \nneeds \nof \nstudents \nwith\ndisabilities while maintaining academic integrity.","metadata":{"loc":{"lines":{"from":207,"to":289}}}}],["16",{"pageContent":"Academic Integrity and Conduct: \nStudents \nand \nfaculty \nat Ontario \nTech \nUniversity \nshare \nan \nimportant \nresponsibility \nto ma\nintain \nthe \nintegrity \nof the \nteaching \nand\nlearning \nrelationship. \nThis \nrelationship \nis characterized \nby \nhonesty, \nfairness \nand \nmutual \nrespect \nfor \nthe \naim \nand \nprinciples \nof\nthe \npursuit \nof \neducation. \nAcademic \nmisconduct \nimpedes \nthe \nactivities \nof \nthe \nuniversity \ncommunity \nand \nis  punishable \nby\nappropriate disciplinary action.\nStudents \nare \nexpected \nto \nbe \nfamiliar \nwith \nOntario \nTech \nUniversity's \nregulations \non \nAcademic \nConduct \n(Section \n5.15 \nof \nthe\nAcademic \nCalendar) \nwhich \nsets \nout \nthe \nkinds \nof actions \nthat \nconstitute \nacademic \nmisconduct, \nincluding \nplagiarism, \ncopying \nor\nallowing \none's \nown \nwork \nto \ncopied, \nuse \nof \nunauthorized \naids \nin \nexaminations \nand\n  tests, \nsubmitting \nwork \nprepared \nin\ncollaboration \nwith \nanother \nstudent \nwhen \nsuch \ncollaboration \nhas \nnot \nbeen \nauthorized, \nand","metadata":{"loc":{"lines":{"from":1,"to":116}}}}],["17",{"pageContent":"use \nof \nunauthorized \naids \nin \nexaminations \nand\n  tests, \nsubmitting \nwork \nprepared \nin\ncollaboration \nwith \nanother \nstudent \nwhen \nsuch \ncollaboration \nhas \nnot \nbeen \nauthorized, \nand \nother \nacademic \noffences. \nThe\nregulations \nalso \ndescribe \nthe \nprocedures \nfor \ndealing \nwith \nallegations, \nand \nthe \nsanctions \nfor \nany \nfinding \nof \nacademic\nmisconduct, \nwhich \ncan \nrange \nfrom \na written\n reprimand \nto permanent \nexpulsion \nfrom \nthe \nuniversity. \nA lack \nof familiarity \nwith\nOntario Tech University's regulations on academic conduct does not constitute a defense against its application.\nFurther information about academic misconduct can be found in the Academic Integrity link on your laptop.\nTurnitin: \nOntario Tech University\n and \nfaculty \nmembers \nreserve \nthe \nright \nto use \nelectronic \nmeans \nto detect \nand \nhelp \nprevent \nplagiarism.\nStudents \nagree \nthat \nby \ntaking \nthis \ncours\ne  all \nassignments \nare \nsubject \nto \nsubmission \nfor \ntextual \nsimilarity \nreview \nby","metadata":{"loc":{"lines":{"from":116,"to":211}}}}],["18",{"pageContent":"electronic \nmeans \nto detect \nand \nhelp \nprevent \nplagiarism.\nStudents \nagree \nthat \nby \ntaking \nthis \ncours\ne  all \nassignments \nare \nsubject \nto \nsubmission \nfor \ntextual \nsimilarity \nreview \nby\nTurnitin.com. \nAssignments \nsubmitted \nto Turnitin.com \nwill \nbe \nincluded \nas source \ndocuments \nin Turnitin.com's \nrestricted \naccess\ndatabase \nsolely \nfor \nthe\n purpose \nof detecting \nplagiarism \nin such \ndocuments \nfor \nfive \nacad\nemic \nyears. \nThe \ninstructor \nmay \nrequire\nstudents \nto submit \ntheir \nassignments \nelectronically \nto Turnitin.com \nor the \ninstructor \nmay \nsubmit \nquestionable \ntext \non \nbehalf\nof \na  student. \nThe \nter\nms \nthat \napply \nto \nOntario \nTech \nUniversity's \nuse \nof \nthe \nTurnit\nin.com \nservice \nare \ndescribed \non \nthe\nTurnitin.com website.\nStudents \nwho \ndo \nnot \nwish \nto \nhave \ntheir \nwork \nsubmitted \nto \nTurnitin.com \nmust \nprovide \nwith \ntheir \nassignment \nat  the \ntime \nof\nsubmission to the instructor a signed Turnitin.com Assignment Cover sheet:","metadata":{"loc":{"lines":{"from":211,"to":322}}}}],["19",{"pageContent":"do \nnot \nwish \nto \nhave \ntheir \nwork \nsubmitted \nto \nTurnitin.com \nmust \nprovide \nwith \ntheir \nassignment \nat  the \ntime \nof\nsubmission to the instructor a signed Turnitin.com Assignment Cover sheet:\nhttps://shared.uoit.ca/shared/department/academic-integrity/Forms/assignment-cover-sheet.pdf\nFurther information about Turnitin can be found on the Academic Integrity link on your laptop.\nStudent Sexual Violence Policy\nOntario \nTech \nUniversity \nis \ncommitted \nto  the \nprevention \nof \nsexual \nviolence \nin \nall \nis \nforms. \nFor \nany \nOntario \nTech\nUniversity \nstudent \nwh\no has \nexperienced \nSexual \nViolence, \nOntario \nTech \nUniversity\n can \nhelp. \nOntario \nTech \nUniversity\n will \nmake\naccommodations to cater to the diverse backgrounds, cultures, and identities of students when dealing with individual cases.If\nyou think you have been subjected to or witnessed sexual violence:\nReach \nout \nto a Support \nWorker, \nwho \nare \nspecially \ntrained \nindividuals \nauthorized \nto receive \nconfidential","metadata":{"loc":{"lines":{"from":322,"to":392}}}}],["20",{"pageContent":"you think you have been subjected to or witnessed sexual violence:\nReach \nout \nto a Support \nWorker, \nwho \nare \nspecially \ntrained \nindividuals \nauthorized \nto receive \nconfidential \ndisclosures \nabout\nincidents \nof \nsexual \nviolence. \nSupport \nWorkers \ncan \noffer \nhelp \nand \nresolutions \noptions \nwhich \ncan \ninclude \nsafety \nplans,","metadata":{"loc":{"lines":{"from":392,"to":423}}}}],["21",{"pageContent":"accommodations, \nmental \nhealth \nsupport, \nand \nmore. \nTo \nmake \nan \nappointment \nwith \na Support \nWorker, \ncall \n905.721.3392\nor email supportworker@uoit.ca  \nLearn more about your options at: \nhttps://studentlife.ontariotechu.ca/sexualviolence/\n \nFreedom of Information and Protection of Information Act: \nThe \nfollowing \nis  an \nimportant \nnotice \nregarding \nthe \nprocess \nfor \nsubmitting \ncourse \nassignments, \nquizzes \nand \nother \nevaluative\nmaterial in your courses.\nAs \nyou \nmay \nknow, \nOn\ntario \nTech \nUniversity \nis  governed \nby \nthe \nFreedom \nof \nInformati\non \nand \nProtection \nof \nInformation \nAct\n(“FIPPA”). \nIn  addition \nto \nproviding \na  mecha\nnism \nfor \nrequesting \nrecords \nheld \nby \nthe \nuniversity, \nthis \nlegislation \nalso \nrequires\nthat Ontario Tech University not disclose the personal information of its students without their consent.\nFIPPA’s \ndefinition \nof “personal \ninformation” \nincludes, \namong \nother \nthings, \ndocuments \nthat \ncontain \nboth \nyour \nname \nand \nyour","metadata":{"loc":{"lines":{"from":1,"to":91}}}}],["22",{"pageContent":"FIPPA’s \ndefinition \nof “personal \ninformation” \nincludes, \namong \nother \nthings, \ndocuments \nthat \ncontain \nboth \nyour \nname \nand \nyour\nBanner \nID. \nFor \nexample, \nthis \ncould \ninclude \ngraded \ntest \npapers \nor \nassignments. \nTo \nensure \nthat \nyour \nrights \nto \nprivacy \nare\nprotected, \nOntario \nTech \nUniversity \nencourages \nyou \nto use \nonly \nyour \nBanner \nID on \nassignments \nor test \npapers \nbeing \nsubmitted\nfor \ngrading. \nThis \npolicy \nis  intended \nto \nprevent \nthe \ninadvertent \ndisclosure \nof \nyour \ninformation \nwhere \ngraded \npapers \nare\nreturned \nto groups \nof students \nat the \nsame \ntime. \nIf you \nstill \nwish \nto write \nboth \nyour \nnam\ne and \nyour \nBanner \nID on \nyour \ntests \nand\nassignments, \nplease \nbe \nadvised \nthat \nOntario \nTech \nUniversity \nwill \ninterpret \nthis \nas \nan \nimplied \nconsent \nto the \ndisclosure \nof your\npersonal information in the normal course of returning graded materials to students.\nIf  you \nhave \nany \nquestions \nor \nconcerns \nrelating \nto \nthe \nnew","metadata":{"loc":{"lines":{"from":91,"to":208}}}}],["23",{"pageContent":"implied \nconsent \nto the \ndisclosure \nof your\npersonal information in the normal course of returning graded materials to students.\nIf  you \nhave \nany \nquestions \nor \nconcerns \nrelating \nto \nthe \nnew \npolicy \nor \nthe \nissue \nof \nimplied \nconsent \naddressed \nabove, \nplease\ncontact the Ontario Tech University privacy office.","metadata":{"loc":{"lines":{"from":208,"to":234}}}}],["24",{"pageContent":"/*\r\n * This program shows how to read input from the keyboard and print output\r\n */\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tint x, y;\r\n\tdouble d;\r\n\tchar c;\r\n\r\n\tcout << \"Enter an integer value for x: \";\r\n\tcin > x;\r\n\tcout << \"You have entered: \" << x <<endl;\r\n\tcout << \"Enter an integer valye for y: \";\r\n\tcin >> y >> endl;\r\n\tcout << \"You have entered: \" << y << endl;\r\n\tcout << \"Enter a number with a decimal value (e.g. 2.3): \";\r\n\tcin >> d;\r\n\tcout << \"You have entered: \" << d<< endl;\r\n\tcout << \"Enter a single letter: \";\r\n\tcin >> c;\r\n\tcout << \"You have entered: \" << c << endl;\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":28}}}}],["25",{"pageContent":"/*\r\n * This program prints the size (in bytes) of various C++ data types\r\n */\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tcout << \"Size of int: \" << sizeof(int) << endl;\r\n\tcout << \"Size of double: \" << sizeof(double) << endl;\r\n\tcout << \"Size of float: \" << sizeof(float) << endl;\r\n\tcout << \"Size of char: \" << sizof(char) << endl;\r\n\tcout << \"size of bool: \" << sizeof(bool) << endl\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":17}}}}],["26",{"pageContent":"/*\r\n * This program prompts the user for a number, checks if its even or odd and prints the result\r\n */\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tint number = 0;\r\n\tcout << \"Please enter a number\" << endl;\r\n\t// Read a number from keyboard\r\n\tcin >> number;\r\n\tif (number % 2 == 0) \r\n\t\tcout << \"Number is even\" << endl;\r\n\t}\r\n\telse {\r\n\t\tcout << \"Number is odd\" << endl;\r\n\t}\r\n\tsystem(\"pause\");\r\n\treturn (0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":22}}}}],["27",{"pageContent":"Dr. Q. Mahmoud\n \nBrief Intro to Linux\n \n \nQusay H. Mahmoud (Dr. Q)\n \nBased on material I have used a\nt Carleton Uni\nversity in \nSummer 2000\n \n \n \nOperating Systems \naspec\nts:\n \n \n•\n \nFile management:  How  files are organized, saved, retrieved, deleted etc.\n \n•\n \nCommand processor:  interprets comma\nnds  and executes them.\n \n•\n \npossibly command line\n \n•\n \npossibly GUI  (mouse click)\n \n \n•\n \nI/O system gives O/S the ability to interact with devices.\n \n \n \nLinu\nx file management   (basically UNIX)\n \n \n•\n \nfiles\n \n•\n \ndirectories (folders)\n \n \nThe directory tree or hierarchy\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nThe \"path\" is the full name of the file, which includes the \"path\" to the file.\n \nThus the full path for file1 in the letter\ns directory is \n \n \n/usr/mary/letters/file1\n \n \n•\n \nNote that there may be more then one file of the same name in different dir\nectories.\n \n•\n \nFile names are case sensitive.  Files are usually lower case. \n \n \nroot(/)\n \nusr\n \nmary\n \njean\n \ntom\n \nletters\n \nbills","metadata":{"loc":{"lines":{"from":1,"to":105}}}}],["28",{"pageContent":"ectories.\n \n•\n \nFile names are case sensitive.  Files are usually lower case. \n \n \nroot(/)\n \nusr\n \nmary\n \njean\n \ntom\n \nletters\n \nbills\n \nfile1.txt\n \nfile1.txt\n \nfile3.cpp","metadata":{"loc":{"lines":{"from":105,"to":130}}}}],["29",{"pageContent":"Dr. Q. Mahmoud\n \nSome Basic Linux Commands\n \n \nThe basic command prompt is  >\n \n \npwd\n  \n \n   \ngives the  current position  (your current directory)\n \n \n            \n \n>pwd\n \n \n \n/usr/mary/letters\n \n \n \n>\n \n       \n \n \ncd\n \n     \n    \nchange the directory  \n \n \nto change to the root directory:  \n \n> cd  / \n \nto change to tom\n \n \n \n>cd  /usr/tom\n \nfor your home directory\n \n \n>cd\n \n \nls\n \nl\nist the  files and directories in the current directory\n \n \n>ls \n-\nl    (the \n-\nl is called an option)   this gives info abo\nut each file,\n \n          \nthe permissions,size, dates etc.\n \n \n>ls \n-\nl    myfile    gives info about that file.\n \n \ncp\n     \ncopy a file\n \n \n>cp /usr/mar\ny/letters/file1.txt  /usr/tom/newletter.txt\n \n \nmv \n     \nchanges name in the same directory and move a file to another di\nrectory\n \n \n>mv  file1.txt   file2.txt\n \n \nrm  \n  \nerases files. Always be careful here.\n \n \n>rm  file1.txt\n \n>rm   file1.txt   file2.txt\n \n \nmkdir\n   \ncreat","metadata":{"loc":{"lines":{"from":1,"to":106}}}}],["30",{"pageContent":"rectory\n \n \n>mv  file1.txt   file2.txt\n \n \nrm  \n  \nerases files. Always be careful here.\n \n \n>rm  file1.txt\n \n>rm   file1.txt   file2.txt\n \n \nmkdir\n   \ncreat\ne a new directory with the given name and in the current directory. So be \ncareful where you do this.\n \n \n>mkdir  assignm\nents\n \n \nrmdir\n    \ngets rid of an empty directory. If there are files first remove them.","metadata":{"loc":{"lines":{"from":106,"to":135}}}}],["31",{"pageContent":"Dr. Q. Mahmoud\n \n \nPermissions\n \n•\n \nEach file and directory has permissio\nns for security. \n \n•\n \nThe permissions can be seen by using the command ls \n-\nl.\n \n•\n \nThe owner can change these.\n \n \nThe permissions\n \nconsist of three groups of 3 letters:     rwx\n \n \nr   read permission. \n \nw  write permission  may change the file\n \nx   execute permission  may\n \nexecute a program.\n \n \nThe three groups are:\n \n•\n \nu\n \nuser     you\n \n•\n \ng \n \ngroup   a group of people recognized by Linux\n \n•\n \no \n \nothers\n \n \nexample:\n \n \nrwxrwxrwx\n \n \n \neveryone can read, write, execute\n \nrwxr\n-\nxr\n-\nx\n \nuser can do all, group and others may read and execute              \nbut \nnot change files\n \nr\n-\nx\n------\n \nuser may not change file, others have no access.\n \n \nchmod\n      \nTo change permissions.\n \n \n>chmod\n \ng+w          to the group add the write permission.\n \n>chmod go\n-\nrx        to the group and others remove r,x permission.\n \n>chmod g+w, o\n-\nr   \nadd w to the group, remove r from others.\n \n \n \ncat","metadata":{"loc":{"lines":{"from":1,"to":104}}}}],["32",{"pageContent":"g+w          to the group add the write permission.\n \n>chmod go\n-\nrx        to the group and others remove r,x permission.\n \n>chmod g+w, o\n-\nr   \nadd w to the group, remove r from others.\n \n \n \ncat \n     \nto display the file (but it may scroll past you) and concatenate \nfiles\n \n \n>cat file1.txt     outputs the file to the screen\n \n>cat file1.txt  file2.txt     outputs both files to the screen sequentially\n \n \nmore\n    \nto look at files one screen at a time\n \n \n>more  filename.txt      outputs the file to the screen one  screenfull at \na time.\n \n \nThen use:\n \n•\n \nspacebar  to advance a screen\n \n•\n \nThe return to advance a line\n \n•\n \nb  to backup one screen\n \n•\n \nh to see all the possible co\nmmands","metadata":{"loc":{"lines":{"from":104,"to":154}}}}],["33",{"pageContent":"Dr. Q. Mahmoud\n \n•\n \nq to exit the command\n \nR\nedirection\n \n•\n \nThe standard input is from the keyboard\n \n•\n \nThe standard output is to the monitor.\n \n•\n \nYou ma\ny want to change this. \n \n•\n \nYou may want to read data from a file.\n \n•\n \nYou may want file to be redirected into a file.\n \n•\n \nUse the redirect o\nperators  <, >\n \n \nexamples:\n \n \nto create a file\n: use cat and direct the input into a named file.\n \n> cat >letter\n \nhello mom\n \nhow are yo\nu?\n \n<ctrl\n-\nd>\n \n \nto concatenate two files and create a third\n. Redirect the output of cat from the monitor to \nthe desired file.\n \n \n>cat \nfile1.txt file2.txt  >  file3.txt\n \n \nthis can be used in running a program to get the input from one file and redirect output to \na second file.\n \n \n \n \n \n \n \nman\n  \nan online help manual. Since there may be a lot of stuff it works like \"more\"\n \nin terms of scrolling.\n \n \n>\nman man     get help on the manual\n \n>man cat    get help on the cat command.\n \n \n \ngrep\n  \nsearch a file or files for a string.","metadata":{"loc":{"lines":{"from":1,"to":89}}}}],["34",{"pageContent":"in terms of scrolling.\n \n \n>\nman man     get help on the manual\n \n>man cat    get help on the cat command.\n \n \n \ngrep\n  \nsearch a file or files for a string.\n \n \n>grep\n  \nhello  letter\n \n \n \nSome Naming Conventions\n \n \nWildcards    *","metadata":{"loc":{"lines":{"from":89,"to":113}}}}],["35",{"pageContent":"Dr. Q. Mahmoud\n \na group of files may be accessed using the wildcard naming conventio\nn.\n \n*   anything\n \n \n \nls g*         list all files beginning with g\n \nls go.* \n \n     \nlist all files named go with any extension\n \nls *   \n \n     \nlist all files\n \n \ncaution \n  \nbe very careful when deleting files and using rm as you may delete alot of files.\n \n \nshortcuts\n \n \ngo\ning back and forth between directories may be tedious so use the following. \n \n \nyour current working directory  is a dot  .\n \nyour h\nome directory is a tilde ~\n \nthe directory one level up is two dots   ..\n \n \nexamples\n:\n \n \nto go back one level     >cd ..\n \nto go to your\n \nhome directory     >cd ~\n \nto use a file in your home directory when you are elsewhere  use the file name with ~  > \nmore  ~mydire\nctory/myfile","metadata":{"loc":{"lines":{"from":1,"to":55}}}}],["36",{"pageContent":"/*\r\n * This program shows how to read a string from the keyboard and print the output\r\n */\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tstring name; // you need to #include <string> to use string\r\n\tcout << \"Enter your name: \";\r\n\tcin >> nme;\r\n\tcout << \"Hello \" << nme << \" and welcome to ENGR 1200\" << endl;\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":16}}}}],["37",{"pageContent":"/*\r\n * This program swaps the values assigned to two variables using a temporary variable.\r\n */\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tint x = 5, y = 7;\r\n\tint tmp = y;\r\n\ty = x;\r\n\tx = y // there are two errors on this line\r\n\tcout << \"x is: \" << x << endl;\r\n\tcout << \"y is: \" << y << endl;\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":17}}}}],["38",{"pageContent":"/*\r\n * This program prompts the user to enter a lowercase letter and prints out the uppercase of the same letter\r\n */\r\n#include <iosteam>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tchar c;\r\n\tcout << \"Enter a lowercase single letter: \";\r\n\tcin >> c;\r\n\tcout << \"The uppercase of \" << c << \" is: \" << char (c-32) << endl;\r\n\tsystem(\"pause\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":15}}}}],["39",{"pageContent":"/*\r\n * This program shows how to use the sqrt() function\r\n */\r\n\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tdouble d = 81.0;\r\n        double s = sqr(d);\r\n\tcout << \"The square root of \" << d << \" is \" << s << endl;\r\n        // OR: cout << \"The square root of \" << d << \" is \" << sqrt(d) << endl;\r\n\tsystem(\"pase\");\r\n\treturn(0);\r\n}","metadata":{"loc":{"lines":{"from":1,"to":16}}}}]]